name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:   # DÃ©clenchement manuel

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Start OpenLDAP container
        run: |
          docker run -d --name openldap \
            -p 1389:1389 -p 1636:1636 \
            -e LDAP_ADMIN_USERNAME=admin \
            -e LDAP_ADMIN_PASSWORD=adminpassword \
            -e LDAP_USERS="smaussion,user01,user02" \
            -e LDAP_PASSWORDS="P@ssw0rd,password1,password2" \
            -e LDAP_ENABLE_TLS=yes \
            -e LDAP_TLS_CERT_FILE=/certs/openldap.crt \
            -e LDAP_TLS_KEY_FILE=/certs/openldap.key \
            -e LDAP_TLS_CA_FILE=/certs/openldapCA.crt \
            -e LDAP_TLS_VERIFY_CLIENT=never \
            -v ${{ github.workspace }}/certs:/certs:ro \
            bitnami/openldap:latest

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
          
      - name: Check Ubuntu version and LDAP packages
        run: |
          lsb_release -a
          apt-cache search libldap
          
      - name: Install native dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libldap-common libldap2 libsasl2-2 libssl3 libkrb5-3

      - name: Create libldap symlink if missing
        run: |
          if [ ! -f /usr/lib/x86_64-linux-gnu/libldap-2.5.so.0 ] && [ -f /usr/lib/x86_64-linux-gnu/libldap.so.2 ]; then
            sudo ln -s /usr/lib/x86_64-linux-gnu/libldap.so.2 /usr/lib/x86_64-linux-gnu/libldap-2.5.so.0
          fi
          
      - name: Check Docker version
        run: docker --version
      
      - name: Start Docker
        run: sudo service docker start

      - name: Create certs folder for docker mount
        run: mkdir -p ./Ldap.Test/bin/Release/net8.0/certs
      
      - name: Copy certs to build folder
        run: cp -r ./Ldap.Test/Certs/* ./Ldap.Test/bin/Release/net8.0/certs/

      - name: Run tests
        env:
          LD_LIBRARY_PATH: /usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
        run: dotnet test --configuration Release
