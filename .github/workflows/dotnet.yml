name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:   # DÃ©clenchement manuel

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  test-ldap-DirectoryServices-protocol:
    name: Test Ldap.DirectoryServices.Test
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Create certs folder for docker mount
        run: mkdir -p ./Ldap.DirectoryServices.Test/bin/Release/net8.0/certs
      
      - name: Copy certs to build folder
        run: cp -r ./Ldap.DirectoryServices.Test/Certs/* ./Ldap.DirectoryServices.Test/bin/Release/net8.0/certs/

      - name: Run tests
        continue-on-error: true
        env:
          LD_LIBRARY_PATH: /usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
        run: |
          mkdir -p TestResults
          dotnet test ./Ldap.DirectoryServices.Test/Ldap.DirectoryServices.Test.csproj  --configuration Release --logger "trx;LogFileName=results.trx" --results-directory TestResults

      - name: Publish test results to GitHub
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: DirectoryServices Unit Tests
          path: TestResults/results.trx
          reporter: dotnet-trx
          fail-on-error: false     

  test-ldap-Novell-Tests:
    name: Testldap-Novell-Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
  
    steps:
      - uses: actions/checkout@v3
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
  
      - name: Create certs folder for docker mount
        run: mkdir -p ./ldap.Novell.Tests/bin/Release/net8.0/certs
  
      - name: Copy certs to build folder
        run: cp -r ./ldap.Novell.Tests/Certs/* ./ldap.Novell.Tests/bin/Release/net8.0/certs/
  
      - name: Run tests
        continue-on-error: true
        env:
          LD_LIBRARY_PATH: /usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
        run: |
          mkdir -p TestResults
          dotnet test ./ldap.Novell.Tests/ldap.Novell.Tests.csproj --configuration Release --logger "trx;LogFileName=results.trx" --results-directory TestResults
  
      - name: Publish test results to GitHub
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: ${{ matrix.os }} Novell test results
          path: TestResults/results.trx
          reporter: dotnet-trx
          fail-on-error: false
  
      

      
